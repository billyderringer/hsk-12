{"version":3,"sources":["../../src/controller/teacherController.js"],"names":["config","db","api","post","req","res","findById","params","id","err","school","send","newTeacher","firstName","body","lastName","_id","save","teacher","teachers","push","json","message","get","find","put","undefined","delete","classrooms","classroom","pull","remove"],"mappings":"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","file":"teacherController.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport {Router} from 'express';\r\nimport School from '../model/schoolModel';\r\nimport Classroom from '../model/classroomModel';\r\nimport Teacher from '../model/teacherModel';\r\nimport Student from '../model/studentModel';\r\n\r\nexport default ({config, db}) => {\r\n    let api = Router();\r\n\r\n    // '/classroom/teachers/add/:id' - Create new teachers\r\n    api.post('/add/:id', (req, res) => {\r\n        School.findById(req.params.id, (err, school) => {\r\n            if (err) {\r\n                res.send(err);\r\n            }\r\n            let newTeacher = new Teacher();\r\n            newTeacher.firstName = req.body.firstName;\r\n            newTeacher.lastName = req.body.lastName;\r\n            newTeacher.school = school._id;\r\n            newTeacher.save((err, teacher) => {\r\n                if (err) {\r\n                    res.send(err);\r\n                }\r\n                school.teachers.push(newTeacher);\r\n                school.save(err => {\r\n                    if(err){\r\n                        res.send(err);\r\n                    }\r\n                });\r\n                teacher.save(err => {\r\n                    if (err) {\r\n                        res.send(err);\r\n                    }\r\n                    res.json({message: 'Teacher successfully added to school'});\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    // '/classroom/teachers/list' - Read all teachers\r\n    api.get('/list', (req, res) => {\r\n        Teacher.find({}, (err, teachers) => {\r\n            if (err) {\r\n                res.send(err);\r\n            }\r\n            res.json(teachers);\r\n        });\r\n    });\r\n\r\n    // '/classroom/teachers/:classId' - Read all teachers by classId\r\n    /*api.get('/:classId', (req, res) => {\r\n        Teacher.find({classrooms: req.params.classId}, (err, teachers) => {\r\n            if (err) {\r\n                res.send(err);\r\n            }\r\n            res.json(teachers);\r\n        });\r\n    });*/\r\n\r\n    // '/classroom/teachers/:id' - Read teacher by id\r\n    api.get('/', (req, res) => {\r\n        Teacher.find({}, (err, teacher) => {\r\n            if (err) {\r\n                res.send(err);\r\n            }\r\n            res.json(teacher);\r\n        });\r\n    });\r\n\r\n    // '/classroom/teachers/update/:id' - Update\r\n    api.put('/update/:id', (req, res) => {\r\n        Teacher.findById(req.params.id, (err, teacher) => {\r\n            if (err) {\r\n                res.send(err);\r\n            }\r\n            if (req.body.firstName !== undefined) {\r\n                teacher.firstName = req.body.firstName;\r\n            }\r\n            if (req.body.lastName !== undefined) {\r\n                teacher.lastName = req.body.lastName;\r\n            }\r\n            teacher.save(err => {\r\n                if (err) {\r\n                    res.send(err);\r\n                }\r\n                res.json({message: teacher.firstName + ' ' + teacher.lastName + '\\'s info updated successfully'});\r\n            });\r\n        });\r\n    });\r\n\r\n    // '/classroom/teachers/remove/:id' - Delete\r\n    api.delete('/remove/:id', (req, res) => {\r\n        Teacher.findById(req.params.id, (err, teacher) => {\r\n            if (err) {\r\n                res.send(err);\r\n            }\r\n            let id = teacher.classrooms;\r\n            Classroom.findById(id, (err, classroom) => {\r\n                classroom.teachers.pull(teacher);\r\n                classroom.save(err => {\r\n                    if (err) {\r\n                        res.send(err);\r\n                    }\r\n                    Teacher.remove({\r\n                        _id: req.params.id\r\n                    }, (err, teacher) => {\r\n                        if (err) {\r\n                            res.send(err);\r\n                        }\r\n                        res.json({message: 'Teacher successfully removed'});\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    return api;\r\n}"]}