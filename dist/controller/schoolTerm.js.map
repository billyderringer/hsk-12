{"version":3,"sources":["../../src/controller/schoolTerm.js"],"names":["api","use","req","res","next","append","post","findById","params","teacherId","err","teacher","send","newTerm","termTitle","body","termStart","termEnd","_id","save","terms","push","json","message","get","find","termId","term","patch","undefined","delete","id","pull","remove","student","status","subject","assignment"],"mappings":"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","file":"schoolTerm.js","sourcesContent":["import {Router} from 'express'\r\nimport { authenticate } from '../middleware/authMiddleware'\r\n\r\nimport Teacher from '../model/teacher'\r\nimport SchoolTerm from '../model/schoolTerm'\r\nimport Assignment from \"../model/assignment\"\r\nimport Student from \"../model/student\"\r\nimport Subject from \"../model/subject\"\r\n\r\nexport default () => {\r\n    let api = Router()\r\n\r\n    api.use((req, res, next) => {\r\n        res.append('Access-Control-Allow-Origin', ['*'])\r\n        res.append('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE')\r\n        res.append('Access-Control-Allow-Headers', 'Content-Type')\r\n        next()\r\n    })\r\n\r\n    // '/term/...' - Create new term\r\n    api.post('/create/:teacherId', authenticate, (req, res) => {\r\n        Teacher.findById(req.params.teacherId, (err, teacher) => {\r\n            if (err) {\r\n                res.send(err);\r\n            }\r\n            let newTerm = new SchoolTerm()\r\n            newTerm.termTitle = req.body.termTitle\r\n            newTerm.termStart = req.body.termStart\r\n            newTerm.termEnd = req.body.termEnd\r\n            newTerm.teacher = teacher._id\r\n            newTerm.save(err => {\r\n                if (err) {\r\n                    res.send(err+' :err saving new term')\r\n                }\r\n                teacher.terms.push(newTerm)\r\n                teacher.save(err => {\r\n                    if (err) {\r\n                        res.send(err+' :err saving term to teacher')\r\n                    }\r\n                    res.json({message: 'new term saved'})\r\n                })\r\n            })\r\n        })\r\n    })\r\n\r\n    // Get terms by teacherId\r\n    api.get('/teacher/:teacherId', (req, res) => {\r\n        SchoolTerm.find({teacher: req.params.teacherId}, (err, terms) => {\r\n            if(terms === null){\r\n                res.json('terms not found')\r\n            }\r\n            else if (err) {\r\n                res.send(err)\r\n            }\r\n            else {\r\n                res.json(terms)\r\n            }\r\n        })\r\n    })\r\n\r\n    // Get term by id\r\n    api.get('/:termId', (req, res) => {\r\n        SchoolTerm.findById(req.params.termId, (err, term) => {\r\n            if(term === null){\r\n                res.json('term not found')\r\n            }\r\n            else if (err) {\r\n                res.send(err)\r\n            }\r\n            else {\r\n                res.json(term)\r\n            }\r\n        })\r\n    })\r\n\r\n    // Update term basic info\r\n    api.patch('/update/:termId', authenticate, (req, res) => {\r\n        SchoolTerm.findById(req.params.termId, (err, term) => {\r\n            if (err) {\r\n                res.send(err)\r\n            }\r\n            if (req.body.termTitle !== undefined) {\r\n                term.termTitle = req.body.termTitle\r\n            }\r\n            if (req.body.termStart !== undefined) {\r\n                term.termStart = req.body.termStart\r\n            }\r\n            if (req.body.termEnd !== undefined) {\r\n                term.termEnd = req.body.termEnd\r\n            }\r\n\r\n            term.save(err => {\r\n                if (err) {\r\n                    res.send(err)\r\n                }\r\n                res.json({message: 'term info updated successfully'})\r\n            })\r\n        })\r\n    })\r\n\r\n    // Delete term\r\n    api.delete('/remove/:termId', authenticate, (req, res) => {\r\n        let id = req.params.termId\r\n\r\n        SchoolTerm.findById(id, (err, term) => {\r\n            if (err) {\r\n                res.send(err + ' :err finding term by id')\r\n            }\r\n            Teacher.find({terms: id}, (err, teacher) => {\r\n                if (err) {\r\n                    res.send(err + ' :err finding teacher by termId')\r\n                }\r\n                teacher[0].terms.pull(term)\r\n                teacher[0].save(err => {\r\n                    if (err) {\r\n                        res.send(err + ' :err saving teacher')\r\n                    }\r\n                })\r\n            })\r\n            SchoolTerm.remove({_id: req.params.termId}, err => {\r\n                if (err) {\r\n                    res.send(err + ' :err removing SchoolTerm')\r\n                }\r\n                Student.remove({term: id}, (err, student) => {\r\n                    if (err) {\r\n                        res.send(err+' :err removing student in term')\r\n                    }\r\n                    if (student === null) {\r\n                        res.status(404).send(\"student not found\")\r\n                    }\r\n\r\n                    Subject.remove({term: id}, (err, subject) => {\r\n                        if (err) {\r\n                            res.send(err+' :err removing subject in student')\r\n                        }\r\n                        if (subject === null) {\r\n                            res.status(404).send(\"subject not found\")\r\n                        }\r\n\r\n                        Assignment.remove({term: id}, (err, assignment) => {\r\n                            if (err) {\r\n                                res.send(err+' :err removing assignment in subject')\r\n                            }\r\n                            if (assignment === null) {\r\n                                res.status(404).send(\"assignment not found\")\r\n                            }\r\n                        })\r\n                    })\r\n                })\r\n            })\r\n        })\r\n        res.json({message: \"term successfully removed\"})\r\n    })\r\n\r\n    return api\r\n}"]}