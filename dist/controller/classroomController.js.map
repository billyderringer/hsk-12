{"version":3,"sources":["../../src/controller/classroomController.js"],"names":["config","db","api","classroomCount","post","req","res","next","newClassroom","roomName","body","save","err","classroom","send","json","message","console","log","get","find","classes","findById","params","hubId","put","delete","remove","_id","id","deletedClass","teachers","students"],"mappings":"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","file":"classroomController.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport {Router} from 'express';\r\nimport School from '../model/schoolModel';\r\nimport Classroom from '../model/classroomModel';\r\nimport Teacher from '../model/teacherModel';\r\nimport Student from '../model/studentModel';\r\n\r\nexport default ({config, db}) => {\r\n    let api = Router();\r\n    let classroomCount = 0;\r\n\r\n    // '/hub/create' - Create Classroom\r\n    api.post('/create', (req, res, next) => {\r\n        let newClassroom = new Classroom();\r\n        newClassroom.roomName = req.body.roomName;\r\n        newClassroom.save((err, classroom) => {\r\n            if (err) {\r\n                res.send(err);\r\n            }\r\n            classroom.save(err => {\r\n                if (err) {\r\n                    res.send(err);\r\n                }\r\n                res.json({message: newClassroom.roomName + ' has been created successfully'});\r\n                classroomCount++;\r\n                console.log(classroomCount);\r\n            });\r\n        });\r\n    });\r\n\r\n    // '/hub' - Read all classrooms\r\n    api.get('/', (req, res, next) => {\r\n        Classroom.find({}, (err, classes) => {\r\n            if (err) {\r\n                res.send(err);\r\n            }\r\n            res.json(classes);\r\n        });\r\n    });\r\n\r\n    // '/hub/:hubId' - Read classroom by id\r\n    api.get('/:hubId', (req, res) => {\r\n        //.findById method\r\n        Classroom.findById(req.params.hubId, (err, classroom) => {\r\n            if (err) {\r\n                res.send(err);\r\n            }\r\n            res.json(classroom);\r\n        });\r\n    });\r\n\r\n    // '/hub/update/:hubId' - Update classroom\r\n    api.put('/update/:hubId', (req, res) => {\r\n        Classroom.findById(req.params.hubId, (err, classroom) => {\r\n            if (err) {\r\n                res.send(err);\r\n            }\r\n            classroom.roomName = req.body.roomName;\r\n            classroom.save(err => {\r\n                if (err) {\r\n                    res.send(err);\r\n                }\r\n                res.json({message: classroom.roomName + ' info updated'});\r\n            });\r\n        });\r\n    });\r\n\r\n    // '/hub/remove/:id' - Delete classroom\r\n    api.delete('/remove/:id', (req, res) => {\r\n        Classroom.remove({_id: req.params.id}, (err, deletedClass) => {\r\n            if (err) {\r\n                res.send(err);\r\n            }\r\n            let id = deletedClass.teachers;\r\n            Teacher.remove(id, (err, teachers) => {\r\n                if (err) {\r\n                    res.send(err);\r\n                }\r\n            });\r\n            id = deletedClass.students;\r\n            Student.remove(id, (err, students) => {\r\n                if (err) {\r\n                    res.send(err);\r\n                }\r\n                res.json({message: \"Classroom successfully removed\"});\r\n            });\r\n        });\r\n    });\r\n\r\n    return api;\r\n}"]}