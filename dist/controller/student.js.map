{"version":3,"sources":["../../src/controller/student.js"],"names":["config","db","api","post","req","res","findById","params","roomId","err","homeroom","send","newStudent","firstName","body","lastName","gradeLevel","homerooms","_id","hub","name","students","push","save","student","json","message","roomName","get","find","id","studentId","teachers","patch","undefined","delete","pull","room","teacher","remove"],"mappings":"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","file":"student.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport {Router} from 'express';\r\nimport Hub from '../model/hub';\r\nimport Homeroom from '../model/homeroom';\r\nimport Teacher from '../model/teacher';\r\nimport Student from '../model/student';\r\n\r\nexport default ({config, db}) => {\r\n    let api = Router();\r\n\r\n    // '/student/:roomId' - Create new students\r\n    api.post('/:roomId', (req, res) => {\r\n        Homeroom.findById(req.params.roomId, (err, homeroom) => {\r\n            if(err){\r\n                res.send(err);\r\n            }\r\n            let newStudent = new Student();\r\n            newStudent.firstName = req.body.firstName;\r\n            newStudent.lastName = req.body.lastName;\r\n            newStudent.gradeLevel = req.body.gradeLevel;\r\n            newStudent.homerooms = homeroom._id;\r\n            newStudent.hub = homeroom.hub;\r\n            const name = newStudent.firstName + ' ' + newStudent.lastName;\r\n            Hub.findById(newStudent.hub, (err, hub) => {\r\n                if(err){\r\n                    res.send(err);\r\n                }\r\n                hub.students.push(newStudent);\r\n                hub.save(err => {\r\n                    if(err){\r\n                        res.send(err);\r\n                    }\r\n                });\r\n            });\r\n            newStudent.save((err, student) => {\r\n                if(err){\r\n                    res.send(err);\r\n                }\r\n                homeroom.students.push(newStudent);\r\n                homeroom.save(err => {\r\n                    if(err){\r\n                        res.send(err);\r\n                    }\r\n                });\r\n                student.save(err => {\r\n                    if(err){\r\n                        res.send(err);\r\n                    }\r\n                    res.json({message: 'Student: ' + name + ' successfully saved to ' + homeroom.roomName});\r\n                });\r\n            });\r\n\r\n        });\r\n    });\r\n\r\n    // '/student/' - Read all students\r\n    api.get('/', (req, res) => {\r\n        Student.find({}, (err, students) => {\r\n            if(err){\r\n                res.send(err);\r\n            }\r\n            res.json(students);\r\n        })\r\n    });\r\n\r\n    // '/student/:roomId' - Read students by roomId\r\n    api.get('/:roomId', (req, res) => {\r\n        let id = req.params.roomId;\r\n        Student.find({homerooms: id}, (err, students) => {\r\n            if(err){\r\n                res.send(err);\r\n            }\r\n            res.json(students);\r\n        });\r\n    });\r\n\r\n    // '/student/:studentId/teachers' - Read teachers by studentId\r\n    api.get('/:studentId/teachers', (req, res) => {\r\n        let id = req.params.studentId;\r\n        Student.find({teachers: id}, (err, teachers) => {\r\n            if (err) {\r\n                res.send(err);\r\n            }\r\n            res.json(teachers);\r\n        });\r\n    });\r\n\r\n    // '/student/:studentId' - Read student by studentId\r\n    api.get('/:studentId', (req, res) => {\r\n        Student.findById(req.params.studentId, (err, student) => {\r\n            if(err){\r\n                res.send(err);\r\n            }\r\n            res.json(student);\r\n        });\r\n    });\r\n\r\n    // '/student/:studentId' - Update student basic info\r\n    api.patch('/:studentId', (req, res) => {\r\n        Student.findById(req.params.studentId, (err, student) => {\r\n            if (err) {\r\n                res.send(err);\r\n            }\r\n            if(req.body.firstName !== undefined) {\r\n                student.firstName = req.body.firstName;\r\n            }\r\n            if(req.body.lastName !== undefined) {\r\n                student.lastName = req.body.lastName;\r\n            }\r\n            if(req.body.gradeLevel !== undefined) {\r\n                student.gradeLevel = req.body.gradeLevel;\r\n            }\r\n            student.save(err => {\r\n                if (err) {\r\n                    res.send(err);\r\n                }\r\n                res.json({message: student.firstName + ' ' + student.lastName + ': Info updated successfully'});\r\n            });\r\n        });\r\n    });\r\n\r\n    // '/:studentId' - Delete student\r\n    api.delete('/:studentId', (req, res) => {\r\n        Student.findById(req.params.studentId, (err, student) => {\r\n            let name = student.firstName + ' ' + lastName;\r\n            let id = student._id;\r\n            if(err){\r\n                res.send(err);\r\n            }\r\n            Hub.find({students: id}, (err, hub) => {\r\n                hub.pull(student);\r\n                hub.save(err => {\r\n                    if(err){\r\n                        res.send(err);\r\n                    }\r\n                });\r\n            });\r\n            Homeroom.find({students: id}, (err, room) => {\r\n                room.pull(student);\r\n                room.save(err => {\r\n                    if(err){\r\n                        res.send(err);\r\n                    }\r\n                });\r\n            });\r\n            Teacher.find({students: id}, (err, teacher) => {\r\n                teacher.pull(student);\r\n                teacher.save(err => {\r\n                    if(err){\r\n                        res.send(err);\r\n                    }\r\n                });\r\n            });\r\n            Student.remove(id, err => {\r\n                if(err){\r\n                    res.send(err);\r\n                }\r\n            });\r\n            res.json({message: 'Student: ' + name + ' successfully removed'});\r\n        });\r\n    });\r\n\r\n    return api;\r\n}"]}