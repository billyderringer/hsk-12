{"version":3,"sources":["../../src/controller/teacher.js"],"names":["config","db","api","teacherCount","post","req","res","findById","params","roomId","err","homeroom","send","newTeacher","firstName","body","lastName","homerooms","hub","teachers","push","save","teacher","json","message","roomName","get","find","id","teacherId","students","patch","undefined","teacherName","studentId","student","studentName","delete","pull","name","_id","remove"],"mappings":"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","file":"teacher.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport {Router} from 'express';\r\nimport Hub from '../model/hub';\r\nimport Homeroom from '../model/homeroom';\r\nimport Teacher from '../model/teacher';\r\nimport Student from '../model/student';\r\n\r\nexport default ({config, db}) => {\r\n    let api = Router();\r\n    let teacherCount = 0;\r\n\r\n    // '/teacher/:roomId' - Create new teachers\r\n    api.post('/:roomId', (req, res) => {\r\n        Homeroom.findById(req.params.roomId, (err, homeroom) => {\r\n            if (err) {\r\n                res.send(err);\r\n            }\r\n            let newTeacher = new Teacher();\r\n            newTeacher.firstName = req.body.firstName;\r\n            newTeacher.lastName = req.body.lastName;\r\n            newTeacher.homerooms = req.params.roomId;\r\n            newTeacher.hub = homeroom.hub;\r\n            Hub.findById(newTeacher.hub, (err, hub) => {\r\n                if(err){\r\n                    res.send(err);\r\n                }\r\n                hub.teachers.push(newTeacher);\r\n                hub.save(err => {\r\n                    if(err){\r\n                        res.send(err);\r\n                    }\r\n                });\r\n            });\r\n            newTeacher.save((err, teacher) => {\r\n                if (err) {\r\n                    res.send(err);\r\n                }\r\n                homeroom.teachers.push(newTeacher);\r\n                homeroom.save(err => {\r\n                    if (err) {\r\n                        res.send(err);\r\n                    }\r\n                });\r\n                teacher.save(err => {\r\n                    if (err) {\r\n                        res.send(err);\r\n                    }\r\n                    teacherCount++;\r\n                    res.json({message: 'Teacher: ' + newTeacher.firstName + ' ' + newTeacher.lastName + ' successfully added to ' + homeroom.roomName});\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    // '/teacher' - Read all teachers\r\n    api.get('/', (req, res) => {\r\n        Teacher.find({}, (err, teachers) => {\r\n            if (err) {\r\n                res.send(err);\r\n            }\r\n            res.json(teachers);\r\n        });\r\n    });\r\n\r\n    // '/teacher/:roomId' - Read all teachers by classId\r\n    api.get('/:roomId', (req, res) => {\r\n        let id = req.params.roomId;\r\n        Teacher.find({homerooms: id}, (err, teachers) => {\r\n            if (err) {\r\n                res.send(err);\r\n            }\r\n            res.json(teachers);\r\n        });\r\n    });\r\n\r\n    // '/teacher/:teacherId/students' - Read students by teacherId\r\n    api.get('/:teacherId/students', (req, res) => {\r\n        let id = req.params.teacherId;\r\n        Teacher.find({students: id}, (err, students) => {\r\n            if (err) {\r\n                res.send(err);\r\n            }\r\n            res.json(students);\r\n        });\r\n    });\r\n\r\n    // '/teacher/:teacherId' - Read teacher by teacherId\r\n    api.get('/:teacherId', (req, res) => {\r\n        Teacher.findById(req.params.teacherId, (err, teacher) => {\r\n            if (err) {\r\n                res.send(err);\r\n            }\r\n            res.json(teacher);\r\n        });\r\n    });\r\n\r\n    // '/teacher/:id' - Update teacher basic info\r\n    api.patch('/:teacherId', (req, res) => {\r\n        Teacher.findById(req.params.teacherId, (err, teacher) => {\r\n            if (err) {\r\n                res.send(err);\r\n            }\r\n            if(req.body.firstName !== undefined) {\r\n                teacher.firstName = req.body.firstName;\r\n            }\r\n            if(req.body.lastName !== undefined) {\r\n                teacher.lastName = req.body.lastName;\r\n            }\r\n            teacher.save(err => {\r\n                if (err) {\r\n                    res.send(err);\r\n                }\r\n                res.json({message: teacher.firstName + ' ' + teacher.lastName + ': Info updated successfully'});\r\n            });\r\n        });\r\n    });\r\n\r\n    // '/teacher/:teacherId/assign/:studentId' - Assign students to teacher\r\n    api.post('/:teacherId/assign/:studentId', (req, res) => {\r\n        Teacher.findById(req.params.teacherId, (err, teacher) => {\r\n            let teacherName = teacher.firstName + ' ' + teacher.lastName;\r\n            if(err){\r\n                res.send(err);\r\n            }\r\n            Student.findById(req.params.studentId, (err, student) => {\r\n                let studentName = student.firstName + ' ' + student.lastName;\r\n                if(err){\r\n                    res.send(err);\r\n                }\r\n                teacher.students.push(student);\r\n                teacher.save(err => {\r\n                    if(err){\r\n                        res.send(err);\r\n                    }\r\n                });\r\n                student.teachers.push(teacher);\r\n                student.save(err => {\r\n                    if(err){\r\n                        res.send(err);\r\n                    }\r\n                });\r\n                res.json({message: studentName + ' successfully assigned to ' + teacherName});\r\n            });\r\n        });\r\n    });\r\n\r\n    // '/teacher/:teacherId/remove/:studentId' Remove student from teacher\r\n    api.delete('/:teacherId/remove/:studentId', (req, res) => {\r\n        Teacher.findById(req.params.teacherId, (err, teacher) => {\r\n            let teacherName = teacher.firstName + ' ' + teacher.lastName;\r\n            if(err){\r\n                res.send(err);\r\n            }\r\n            Student.findById(req.params.studentId, (err, student) => {\r\n                let studentName = student.firstName + ' ' + student.lastName;\r\n                if(err){\r\n                    res.send(err);\r\n                }\r\n                teacher.students.pull(student);\r\n                teacher.save(err => {\r\n                    if(err){\r\n                        res.send(err);\r\n                    }\r\n                });\r\n                student.teachers.pull(teacher);\r\n                student.save(err => {\r\n                    if(err){\r\n                        res.send(err);\r\n                    }\r\n                });\r\n                res.json({message: studentName + ' successfully removed from ' + teacherName});\r\n            });\r\n        });\r\n    });\r\n\r\n    // '/teacher/:teacherId' - Delete teacher\r\n    api.delete('/:teacherId', (req, res) => {\r\n        Teacher.findById(req.params.teacherId, (err, teacher) => {\r\n            if (err) {\r\n                res.send(err);\r\n            }\r\n            let name = teacher.firstName + ' ' + teacher.lastName;\r\n            let id = teacher._id;\r\n            Hub.find({homerooms: id}, (err, hub) => {\r\n                if(err){\r\n                    res.send(err);\r\n                }\r\n                hub.teachers.pull(teacher);\r\n                hub.save(err => {\r\n                    if(err){\r\n                        res.send(err);\r\n                    }\r\n                });\r\n            });\r\n            Homeroom.find({homerooms: id}, (err, homeroom) => {\r\n                if(err){\r\n                    res.send(err);\r\n                }\r\n                homeroom.teachers.pull(teacher);\r\n                homeroom.save(err => {\r\n                    if (err) {\r\n                        res.send(err);\r\n                    }\r\n                });\r\n            });\r\n            Teacher.remove(id, err => {\r\n                if (err) {\r\n                    res.send(err);\r\n                }\r\n                teacherCount--;\r\n                res.json({message: name + ' successfully removed'});\r\n            });\r\n        });\r\n    });\r\n\r\n    return api;\r\n}"]}