{"version":3,"sources":["../../src/controller/teacher.js"],"names":["api","use","req","res","next","append","post","register","username","body","email","firstName","lastName","password","err","console","log","status","send","authenticate","session","scope","get","logout","json","user","findById","params","teacherId","teacher","patch","undefined","streetAddress","usState","zipCode","phonePrimary","phoneSecondary","personalDescription","avatar","homeroomName","save","message","delete","find","_id","id","term","student","subject","assignment","remove"],"mappings":"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","file":"teacher.js","sourcesContent":["import {Router} from 'express'\r\nimport passport from 'passport'\r\nimport {generateAccessToken, respond, authenticate} from '../middleware/authMiddleware'\r\n\r\nimport Teacher from '../model/teacher'\r\nimport SchoolTerm from '../model/schoolTerm'\r\nimport Student from '../model/student'\r\nimport Subject from '../model/subject'\r\nimport Assignment from '../model/assignment'\r\n\r\nexport default () => {\r\n    let api = Router()\r\n\r\n    api.use((req, res, next) => {\r\n        res.append('Access-Control-Allow-Origin', ['*'])\r\n        res.append('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE')\r\n        res.append('Access-Control-Allow-Headers', 'Content-Type')\r\n        next()\r\n    })\r\n\r\n    // '/teacher/...' - Register new account\r\n    api.post('/register', (req, res) => {\r\n        Teacher.register(new Teacher({\r\n            username: req.body.email,\r\n            firstName: req.body.firstName,\r\n            lastName: req.body.lastName\r\n        }), req.body.password, err => {\r\n            if (err) {\r\n                console.log(err)\r\n                res.status(401).send('unauthorized');\r\n            }\r\n            passport.authenticate(\r\n                'local', {\r\n                    session: false\r\n                })(req, res, () => {\r\n                res.status(200).send('Successfully created new account')\r\n            })\r\n        })\r\n    })\r\n\r\n    // Login\r\n    api.post('/login', passport.authenticate(\r\n        'local', {\r\n            session: false,\r\n            scope: []\r\n        }),\r\n        generateAccessToken, respond)\r\n\r\n    // Logout\r\n    api.get('/logout', authenticate, (req, res) => {\r\n        res.logout()\r\n        res.status(200).send('Successfully logged out')\r\n    })\r\n\r\n    // Get info about account\r\n    api.get('/me', authenticate, (req, res) => {\r\n        res.status(200).json(req.user)\r\n    })\r\n\r\n    // Get teacher by teacherId\r\n    api.get('/:teacherId', authenticate, (req, res) => {\r\n        Teacher.findById(req.params.teacherId, (err, teacher) => {\r\n            if(teacher === null){\r\n                res.json('teacher not found')\r\n            }\r\n            else if (err) {\r\n                res.send(err)\r\n            }\r\n            else {\r\n                res.json(teacher)\r\n            }\r\n        })\r\n    })\r\n\r\n    // Update teacher basic info\r\n    // email will be unchangeable as it will be username\r\n    api.patch('/update/:teacherId', authenticate, (req, res) => {\r\n        Teacher.findById(req.params.teacherId, (err, teacher) => {\r\n            if (err) {\r\n                res.send(err)\r\n            }\r\n            if (req.body.firstName !== undefined) {\r\n                teacher.firstName = req.body.firstName\r\n            }\r\n            if (req.body.lastName !== undefined) {\r\n                teacher.lastName = req.body.lastName\r\n            }\r\n            if (req.body.password !== undefined) {\r\n                teacher.password = req.body.password\r\n            }\r\n            if (req.body.streetAddress !== undefined) {\r\n                teacher.streetAddress = req.body.streetAddress\r\n            }\r\n            if (req.body.usState !== undefined) {\r\n                teacher.usState = req.body.usState\r\n            }\r\n            if (req.body.zipCode !== undefined) {\r\n                teacher.zipCode = req.body.zipCode\r\n            }\r\n            if (req.body.phonePrimary !== undefined) {\r\n                teacher.phonePrimary = req.body.phonePrimary;\r\n            }\r\n            if (req.body.phoneSecondary !== undefined) {\r\n                teacher.phoneSecondary = req.body.phoneSecondary\r\n            }\r\n            if (req.body.personalDescription !== undefined) {\r\n                teacher.personalDescription = req.body.personalDescription\r\n            }\r\n            if (req.body.avatar !== undefined) {\r\n                teacher.avatar = req.body.avatar\r\n            }\r\n            if (req.body.homeroomName !== undefined) {\r\n                teacher.homeroomName = req.body.homeroomName\r\n            }\r\n\r\n            teacher.save(err => {\r\n                if (err) {\r\n                    res.send(err)\r\n                }\r\n                res.json({message: 'teacher info updated successfully'})\r\n            })\r\n        })\r\n    })\r\n\r\n    // Delete teacher\r\n    api.delete('/remove/:teacherId', authenticate, (req, res) => {\r\n        Teacher.find({_id: req.params.teacherId}, err => {\r\n            if (err) {\r\n                res.send(err+' :err finding teacher by id')\r\n            }\r\n            let id = req.params.teacherId\r\n            SchoolTerm.find({teacher: id}, (err, term) => {\r\n                if (err) {\r\n                    res.send(err+' :err finding term in teacher')\r\n                }\r\n                if (term === null) {\r\n                    res.status(404).send(\"term not found\")\r\n                }\r\n                    Student.find({teacher: id}, (err, student) => {\r\n                        if (err) {\r\n                            res.send(err+' :err finding student in term')\r\n                        }\r\n                        if (student === null) {\r\n                            res.status(404).send(\"student not found\")\r\n                        }\r\n                            Subject.find({teacher: id}, (err, subject) => {\r\n                                if (err) {\r\n                                    res.send(err+' :err finding subject in student')\r\n                                }\r\n                                if (subject === null) {\r\n                                    res.status(404).send(\"subject not found\")\r\n                                }\r\n                                    Assignment.find({teacher: id}, (err, assignment) => {\r\n                                        if (err) {\r\n                                            res.send(err+' :err finding assignment in subject')\r\n                                        }\r\n                                        if (assignment === null) {\r\n                                            res.status(404).send(\"assignment not found\")\r\n                                        }\r\n                                    }).remove( err => {\r\n                                        if (err) {\r\n                                            res.send(err+' :err removing assignment')\r\n                                        }\r\n                                    })\r\n                            }).remove( err => {\r\n                                if (err) {\r\n                                    res.send(err+' :err removing subject')\r\n                                }\r\n                            })\r\n\r\n                    }).remove( err => {\r\n                        if (err) {\r\n                            res.send(err+' :err removing student')\r\n                        }\r\n                    })\r\n            }).remove( err => {\r\n                if (err) {\r\n                    res.send(err + ' :err removing term')\r\n                }\r\n            })\r\n        }).remove( err => {\r\n            if (err) {\r\n                res.send(err + ' :err removing teacher')\r\n            }\r\n        })\r\n        res.json({message: \"teacher successfully removed\"})\r\n    })\r\n\r\n    return api\r\n}\r\n\r\n"]}