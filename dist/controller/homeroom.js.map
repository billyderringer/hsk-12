{"version":3,"sources":["../../src/controller/homeroom.js"],"names":["config","db","api","homeroomCount","post","req","res","findById","params","hubId","err","hub","send","newHomeroom","roomName","body","_id","save","homeroom","homerooms","push","json","message","hubName","get","next","find","roomId","put","undefined","delete","id","homeroomName","pull","remove","teachers","students"],"mappings":"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","file":"homeroom.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport {Router} from 'express';\r\nimport Hub from '../model/hub';\r\nimport Homeroom from '../model/homeroom';\r\nimport Teacher from '../model/teacher';\r\nimport Student from '../model/student';\r\n\r\nexport default ({config, db}) => {\r\n    let api = Router();\r\n    let homeroomCount = 0;\r\n\r\n    // '/homeroom/:hubId' - Create new homeroom\r\n    api.post('/create/:hubId', (req, res) => {\r\n        Hub.findById(req.params.hubId, (err, hub) => {\r\n            if (err) {\r\n                res.send(err);\r\n            }\r\n            let newHomeroom = new Homeroom();\r\n            newHomeroom.roomName = req.body.roomName;\r\n            newHomeroom.hub = hub._id;\r\n            newHomeroom.save((err, homeroom) => {\r\n                if (err) {\r\n                    res.send(err);\r\n                }\r\n                hub.homerooms.push(newHomeroom);\r\n                hub.save(err => {\r\n                    if (err) {\r\n                        res.send(err);\r\n                    }\r\n                });\r\n                homeroom.save(err => {\r\n                    if (err) {\r\n                        res.send(err);\r\n                    }\r\n                    res.json({message: newHomeroom.roomName + ' successfully added to ' + hub.hubName});\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    // '/homeroom/' - Read all homerooms\r\n    api.get('/', (req, res, next) => {\r\n        Homeroom.find({}, (err, homeroom) => {\r\n            if (err) {\r\n                res.send(err);\r\n            }\r\n            res.json(homeroom);\r\n        });\r\n    });\r\n\r\n    // '/homeroom/:roomId' - Read homeroom by id\r\n    api.get('/:roomId', (req, res) => {\r\n        //.findById method\r\n        Homeroom.findById(req.params.roomId, (err, homeroom) => {\r\n            if (err) {\r\n                res.send(err);\r\n            }\r\n            res.json(homeroom);\r\n        });\r\n    });\r\n\r\n    // '/homeroom/:roomId' - Update homeroom\r\n    api.put('/update/:roomId', (req, res) => {\r\n        Homeroom.findById(req.params.roomId, (err, homeroom) => {\r\n            if (err) {\r\n                res.send(err);\r\n            }\r\n            if (req.body.roomName !== undefined) {\r\n                homeroom.roomName = req.body.roomName;\r\n            }\r\n            homeroom.save(err => {\r\n                if (err) {\r\n                    res.send(err);\r\n                }\r\n                res.json({message: homeroom.roomName + ' info updated'});\r\n            });\r\n        });\r\n    });\r\n\r\n    // '/homeroom/:roomId' - Remove homeroom\r\n    api.delete('/remove/:roomId', (req, res) => {\r\n        let id = req.params.roomId;\r\n        Homeroom.findById(id, (err, homeroom) => {\r\n            let homeroomName = homeroom.roomName;\r\n            Hub.find({homerooms: id}, (err, hub) => {\r\n                if (err) {\r\n                    res.send(err);\r\n                }\r\n                hub.homerooms.pull(homeroom);\r\n                hub.save(err => {\r\n                    if (err) {\r\n                        res.send(err);\r\n                    }\r\n                });\r\n            });\r\n            Homeroom.remove({_id: req.params.roomId}, (err, homeroom) => {\r\n                if (err) {\r\n                    res.send(err);\r\n                }\r\n                id = homeroom.teachers;\r\n                Teacher.remove(id, err => {\r\n                    if (err) {\r\n                        res.send(err);\r\n                    }\r\n                });\r\n                id = homeroom.students;\r\n                Student.remove(id, err => {\r\n                    if (err) {\r\n                        res.send(err);\r\n                    }\r\n                });\r\n                homeroomCount--;\r\n                res.json({message: homeroomName + \" successfully removed\"});\r\n            });\r\n        });\r\n    });\r\n\r\n    return api;\r\n}"]}