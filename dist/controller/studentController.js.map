{"version":3,"sources":["../../src/controller/studentController.js"],"names":["config","db","api","post","req","res","findById","params","id","err","school","send","newStudent","firstName","body","lastName","gradeLevel","gradingScale","_id","save","student","students","push","json","message"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;kBAEe,gBAAkB;AAAA,QAAhBA,MAAgB,QAAhBA,MAAgB;AAAA,QAARC,EAAQ,QAARA,EAAQ;;AAC7B,QAAIC,MAAM,sBAAV;;AAEA;AACAA,QAAIC,IAAJ,CAAS,UAAT,EAAqB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC/B,8BAAOC,QAAP,CAAgBF,IAAIG,MAAJ,CAAWC,EAA3B,EAA+B,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAC5C,gBAAGD,GAAH,EAAO;AACHJ,oBAAIM,IAAJ,CAASF,GAAT;AACH;AACD,gBAAIG,aAAa,4BAAjB;AACAA,uBAAWC,SAAX,GAAuBT,IAAIU,IAAJ,CAASD,SAAhC;AACAD,uBAAWG,QAAX,GAAsBX,IAAIU,IAAJ,CAASC,QAA/B;AACAH,uBAAWI,UAAX,GAAwBZ,IAAIU,IAAJ,CAASE,UAAjC;AACAJ,uBAAWK,YAAX,GAA0Bb,IAAIU,IAAJ,CAASG,YAAnC;AACAL,uBAAWF,MAAX,GAAoBA,OAAOQ,GAA3B;AACAN,uBAAWO,IAAX,CAAgB,UAACV,GAAD,EAAMW,OAAN,EAAkB;AAC9B,oBAAGX,GAAH,EAAO;AACHJ,wBAAIM,IAAJ,CAASF,GAAT;AACH;AACDC,uBAAOW,QAAP,CAAgBC,IAAhB,CAAqBV,UAArB;AACAF,uBAAOS,IAAP,CAAY,eAAO;AACf,wBAAGV,GAAH,EAAO;AACHJ,4BAAIM,IAAJ,CAASF,GAAT;AACH;AACJ,iBAJD;AAKAW,wBAAQD,IAAR,CAAa,eAAO;AAChB,wBAAGV,GAAH,EAAO;AACHJ,4BAAIM,IAAJ,CAASF,GAAT;AACH;AACDJ,wBAAIkB,IAAJ,CAAS,EAACC,SAAS,sCAAV,EAAT;AACH,iBALD;AAMH,aAhBD;AAkBH,SA5BD;AA6BH,KA9BD;;AAiCA,WAAOtB,GAAP;AACH,C","file":"studentController.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport {Router} from 'express';\r\nimport School from '../model/schoolModel';\r\nimport Classroom from '../model/classroomModel';\r\nimport Teacher from '../model/teacherModel';\r\nimport Student from '../model/studentModel';\r\n\r\nexport default ({config, db}) => {\r\n    let api = Router();\r\n\r\n    // '/classroom/students/add/:id' - Create new students\r\n    api.post('/add/:id', (req, res) => {\r\n        School.findById(req.params.id, (err, school) => {\r\n            if(err){\r\n                res.send(err);\r\n            }\r\n            let newStudent = new Student();\r\n            newStudent.firstName = req.body.firstName;\r\n            newStudent.lastName = req.body.lastName;\r\n            newStudent.gradeLevel = req.body.gradeLevel;\r\n            newStudent.gradingScale = req.body.gradingScale;\r\n            newStudent.school = school._id;\r\n            newStudent.save((err, student) => {\r\n                if(err){\r\n                    res.send(err);\r\n                }\r\n                school.students.push(newStudent);\r\n                school.save(err => {\r\n                    if(err){\r\n                        res.send(err);\r\n                    }\r\n                });\r\n                student.save(err => {\r\n                    if(err){\r\n                        res.send(err);\r\n                    }\r\n                    res.json({message: 'Student successfully saved to school'});\r\n                });\r\n            });\r\n\r\n        });\r\n    });\r\n\r\n\r\n    return api;\r\n}"]}